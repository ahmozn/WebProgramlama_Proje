// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webProgProje.Models;

#nullable disable

namespace webProgProje.Migrations
{
    [DbContext(typeof(CombineContext))]
    partial class CombineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webProgProje.Models.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminID"));

                    b.Property<string>("TC")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("AdminID");

                    b.HasIndex("TC");

                    b.ToTable("Adminler");
                });

            modelBuilder.Entity("webProgProje.Models.Anadal", b =>
                {
                    b.Property<int>("AnadalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnadalID"));

                    b.Property<string>("AnadalAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnadalID");

                    b.ToTable("Anadallar");
                });

            modelBuilder.Entity("webProgProje.Models.Doktor", b =>
                {
                    b.Property<int>("DoktorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoktorID"));

                    b.Property<int>("AnadalID")
                        .HasColumnType("int");

                    b.Property<string>("DoktorDerece")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("DoktorID");

                    b.HasIndex("AnadalID");

                    b.HasIndex("TC");

                    b.ToTable("Doktorlar");
                });

            modelBuilder.Entity("webProgProje.Models.Hasta", b =>
                {
                    b.Property<int>("HastaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HastaID"));

                    b.Property<string>("TC")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("HastaID");

                    b.HasIndex("TC");

                    b.ToTable("Hastalar");
                });

            modelBuilder.Entity("webProgProje.Models.Kullanici", b =>
                {
                    b.Property<string>("TC")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciTipi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("TC");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("webProgProje.Models.Randevu", b =>
                {
                    b.Property<int>("RandevuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RandevuID"));

                    b.Property<int>("AnadalID")
                        .HasColumnType("int");

                    b.Property<int>("DoktorID")
                        .HasColumnType("int");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<int?>("HastaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RandevuDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("RandevuTime")
                        .HasColumnType("time");

                    b.HasKey("RandevuID");

                    b.HasIndex("AnadalID");

                    b.HasIndex("DoktorID");

                    b.HasIndex("HastaID");

                    b.ToTable("Randevular");
                });

            modelBuilder.Entity("webProgProje.Models.Admin", b =>
                {
                    b.HasOne("webProgProje.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("TC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("webProgProje.Models.Doktor", b =>
                {
                    b.HasOne("webProgProje.Models.Anadal", "Anadal")
                        .WithMany("DoktorListesi")
                        .HasForeignKey("AnadalID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("webProgProje.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("TC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anadal");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("webProgProje.Models.Hasta", b =>
                {
                    b.HasOne("webProgProje.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("TC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("webProgProje.Models.Randevu", b =>
                {
                    b.HasOne("webProgProje.Models.Anadal", "Anadal")
                        .WithMany()
                        .HasForeignKey("AnadalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webProgProje.Models.Doktor", "Doktor")
                        .WithMany("AktifRandevular")
                        .HasForeignKey("DoktorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webProgProje.Models.Hasta", "Hasta")
                        .WithMany("AktifRandevular")
                        .HasForeignKey("HastaID");

                    b.Navigation("Anadal");

                    b.Navigation("Doktor");

                    b.Navigation("Hasta");
                });

            modelBuilder.Entity("webProgProje.Models.Anadal", b =>
                {
                    b.Navigation("DoktorListesi");
                });

            modelBuilder.Entity("webProgProje.Models.Doktor", b =>
                {
                    b.Navigation("AktifRandevular");
                });

            modelBuilder.Entity("webProgProje.Models.Hasta", b =>
                {
                    b.Navigation("AktifRandevular");
                });
#pragma warning restore 612, 618
        }
    }
}
